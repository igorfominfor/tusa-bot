from keep_alive import keep_alive
from telegram import Update
from telegram.ext import (Application, ApplicationBuilder, CommandHandler,
                          MessageHandler, filters, ContextTypes,
                          ConversationHandler)

# üÜî –£–∫–∞–∂–∏ —Å–≤–æ–π Telegram ID –∑–¥–µ—Å—å
ADMIN_ID = 8058164231
# ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π ID

ASK_IG, ASK_AGE, ASK_TIME, ASK_PARTY = range(4)

final_message = """‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –∞–Ω–∫–µ—Ç—É!
    
    üòà Welcome –≤ –Ω–æ—á–Ω–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏ –ë–∞–Ω–≥–∫–æ–∫–∞ ü•ÇüåÉ
    
    üî• –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –Ω–∞—à *–∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª* ‚Äî —Ç–∞–º –∞—Ñ–∏—à–∏, —Ñ–æ—Ç–æ –∏ –≤—Å—è –Ω–æ—á–Ω–∞—è –¥–≤–∏–∂—É—Ö–∞ –ë–∞–Ω–≥–∫–æ–∫–∞
    üëâ [–í–æ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª](https://t.me/+ztVkwOXZqPozZWE9)
    """


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–≠—Ç–æ —Ñ–µ–π—Å-–∫–æ–Ω—Ç—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Ç—É—Å–æ–≤–æ–∫ –≤ –ë–∞–Ω–≥–∫–æ–∫–µ ü™©\n\n"
        "–•–æ—á–µ—à—å –ø–æ–ø–∞—Å—Ç—å? –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º.\n\n"
        "1Ô∏è‚É£ –°—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π Instagram (–±–µ–∑ @) –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ.\n"
        "üîì –ü—Ä–æ—Ñ–∏–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏ —Å –ª–∏—á–Ω—ã–º–∏ —Ñ–æ—Ç–æ*")

    context.user_data.clear()

    return ASK_IG


async def receive_ig(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data = context.user_data

    if update.message.photo:
        photo = update.message.photo[-1]
        file_id = photo.file_id
        user_data["ig_text"] = "üì∏ –§–æ—Ç–æ"
        user_data["ig_photo"] = file_id
        if update.message.caption:
            user_data["ig_text"] = update.message.caption
        else:
            user_data["ig_text"] = "üì∏ –§–æ—Ç–æ"
            
    elif update.message.text:
        user_data["ig_text"] = update.message.text
        user_data["ig_photo"] = None
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ Instagram.")
        return ASK_IG

    await update.message.reply_text("2Ô∏è‚É£ –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    return ASK_AGE


async def receive_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["age"] = update.message.text
    await update.message.reply_text("3Ô∏è‚É£ –ö–∞–∫ –¥–∞–≤–Ω–æ —Ç—ã –≤ –ë–∞–Ω–≥–∫–æ–∫–µ?")
    return ASK_TIME


async def receive_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["time"] = update.message.text
    await update.message.reply_text("4Ô∏è‚É£ –ß–∞—Å—Ç–æ –ª–∏ –±—ã–≤–∞–µ—à—å –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∞—Ö?")
    return ASK_PARTY


async def receive_party(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["party"] = update.message.text

    ig_text = context.user_data.get("ig_text", "-")
    photo_id = context.user_data.get("ig_photo", None)
    age = context.user_data.get("age", "-")
    time = context.user_data.get("time", "-")
    party = context.user_data.get("party", "-")

    username = update.effective_user.username
    user_id = update.effective_user.id
    tg_contact = f"@{username}" if username else f"tg://user?id={user_id}"

    ig_link = f"[üìé –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å](https://instagram.com/{ig_text.lstrip('@')})" if ig_text != "-" else ""

    message_text = ("üì© *–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞:*\n\n"
                    f"üìé Instagram: {ig_text}\n"
                    f"{ig_link}\n"
                    f"üìÖ –í–æ–∑—Ä–∞—Å—Ç: {age}\n"
                    f"üåç –í –ë–∞–Ω–≥–∫–æ–∫–µ: {time}\n"
                    f"üéâ –¢—É—Å–æ–≤–∫–∏: {party}\n"
                    f"üì± Telegram: {tg_contact}")

    try:
        if photo_id:
            await context.bot.send_photo(chat_id=ADMIN_ID,
                                         photo=photo_id,
                                         caption=message_text,
                                         parse_mode="Markdown")
        else:
            await context.bot.send_message(chat_id=ADMIN_ID,
                                           text=message_text,
                                           parse_mode="Markdown")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É:", e)

    await update.message.reply_text(final_message, parse_mode="Markdown")
    return ConversationHandler.END


async def info(update, context):
    await update.message.reply_text(
        "üëã –≠—Ç–æ—Ç –±–æ—Ç –¥–ª—è —Ñ–µ–π—Å-–∫–æ–Ω—Ç—Ä–æ–ª—è –≤ –∑–∞–∫—Ä—ã—Ç–æ–µ —Ç—É—Å–æ–≤–æ—á–Ω–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏ –ë–∞–Ω–≥–∫–æ–∫–∞.\n\n"
        "üö® –ú—ã —Å–æ–±–∏—Ä–∞–µ–º —è—Ä–∫–∏—Ö, —Å—Ç–∏–ª—å–Ω—ã—Ö –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç nightlife.\n\n"
        "üì© –ü—Ä–æ–π–¥–∏ –∞–Ω–∫–µ—Ç—É —á–µ—Ä–µ–∑ /start ‚Äî –∏ –µ—Å–ª–∏ —Ç—ã —Å –≤–∞–π–±–æ–º, —Ç–µ–±–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ –Ω–∞—à–µ–º—É —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª—É —Å –∞—Ñ–∏—à–∞–º–∏, —Å–ø–∏—Å–∫–∞–º–∏ –∏ –¥–≤–∏–∂–µ–º.\n\n"
        "üéâ –í—Ö–æ–¥ –≤ –Ω–∞—à–∏ –∫–ª—É–±—ã –≤—Å–µ–≥–¥–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π ‚Äî —Ç—É—Å–æ–≤–∫–∏, –Ω–æ–≤—ã–µ –ª–∏—Ü–∞ –∏ –∞–ª–∫–æ–≥–æ–ª—å –Ω–∞ –º–µ—Å—Ç–µ üç∏"
    )


async def rules(update, context):
    await update.message.reply_text(
        "üìú *–ü—Ä–∞–≤–∏–ª–∞ —É—á–∞—Å—Ç–∏—è –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è:*\n\n"
        "‚ú® –ë—É–¥—å –≤–µ–∂–ª–∏–≤ ‚Äî –∑–¥–µ—Å—å —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∫–ª–∞—Å—Å–Ω—ã–µ, —Ä–∞–∑–Ω—ã–µ, –Ω–æ –≤—Å–µ–≥–¥–∞ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–µ –ª—é–¥–∏.\n"
        "üö´ –ù–µ–∞–¥–µ–∫–≤–∞—Ç –∏ –∞–≥—Ä–µ—Å—Å–∏—è ‚Äî —Å—Ä–∞–∑—É –≤ —á–µ—Ä–Ω—ã–π –ª–∏—Å—Ç. –ú—ã –∑–∞ –∫–æ–º—Ñ–æ—Ä—Ç –∏ –ª—ë–≥–∫–∏–π –≤–∞–π–±.\n"
        "üëü –î—Ä–µ—Å—Å-–∫–æ–¥ = –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–µ—á–µ—Ä–∏–Ω–∫–∏. –ë–µ–∑ —à–ª—ë–ø–∞–Ω—Ü–µ–≤, –º–∞–µ–∫-–∞–ª–∫–æ–≥–æ–ª–∏—á–µ–∫ –∏ \"—Ç–æ–ª—å–∫–æ —Å –ø–ª—è–∂–∞\". –°—Ç–∏–ª—å–Ω–æ ‚Äî –∑–Ω–∞—á–∏—Ç –≤ —Ç–µ–º–µ.\n"
        "üéµ –°–ª—É—à–∞–π –º—É–∑—ã–∫—É, —Ç–∞–Ω—Ü—É–π, –æ–±—â–∞–π—Å—è ‚Äî –Ω–æ –Ω–µ –º–µ—à–∞–π –¥—Ä—É–≥–∏–º –∫–∞–π—Ñ–æ–≤–∞—Ç—å.\n"
        "‚è∞ –ü—Ä–∏—Ö–æ–¥–∏ –≤–æ–≤—Ä–µ–º—è ‚Äî –º—ã —Ü–µ–Ω–∏–º —Ç–µ—Ö, –∫—Ç–æ –≤ —Ç–µ–º–µ —Å –ø–µ—Ä–≤—ã—Ö –º–∏–Ω—É—Ç.\n"
        "üíú –ï—Å–ª–∏ —Ç—ã —Å –≤–∞–π–±–æ–º ‚Äî welcome. üíú\n"
        "üîû 20+ - —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö.üîû",
        parse_mode="Markdown")


async def contact(update, context):
    await update.message.reply_text("üì© –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É: @igordotgif")


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–∫–µ–π, –æ—Ç–º–µ–Ω–∏–ª–∏. –£–≤–∏–¥–∏–º—Å—è –ø–æ–∑–∂–µ üëã")
    return ConversationHandler.END


def main():
    import os
    app = ApplicationBuilder().token(os.getenv("BOT_TOKEN")).build()

    conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.PHOTO | filters.TEXT, receive_ig)
    ],
    states={
            ASK_IG: [MessageHandler(filters.TEXT | filters.PHOTO, receive_ig)],
            ASK_AGE: [MessageHandler(filters.TEXT, receive_age)],
            ASK_TIME: [MessageHandler(filters.TEXT, receive_time)],
            ASK_PARTY: [MessageHandler(filters.TEXT, receive_party)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("info", info))
    app.add_handler(CommandHandler("rules", rules))
    app.add_handler(CommandHandler("contact", contact))
    app.add_handler(conv_handler)
    app.run_polling()


if __name__ == "__main__":
    keep_alive()
    main()
